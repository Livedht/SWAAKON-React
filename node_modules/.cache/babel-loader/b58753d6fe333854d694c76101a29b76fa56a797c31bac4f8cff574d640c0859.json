{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A1510207\\\\OneDrive - BI Norwegian Business School (BIEDU)\\\\Documents\\\\Dev prosjekter\\\\SWAAKON-React\\\\src\\\\components\\\\AdminTools.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, TextField, Button, Typography, Alert, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Switch, Tabs, Tab, Grid, Card, CardContent } from '@mui/material';\nimport { supabase } from '../services/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminTools = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [newUserEmail, setNewUserEmail] = useState('');\n  const [newUserPassword, setNewUserPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const [error, setError] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [activeTab, setActiveTab] = useState(0);\n  const [stats, setStats] = useState({\n    totalUsers: 0,\n    activeUsers: 0,\n    admins: 0,\n    dailySearches: 0,\n    averageResponseTime: 0,\n    popularCourses: [],\n    apiUsage: {\n      daily: 0,\n      monthly: 0\n    }\n  });\n\n  // Hent alle brukere\n  const fetchUsers = async () => {\n    try {\n      const {\n        data: {\n          users\n        },\n        error\n      } = await supabase.auth.admin.listUsers();\n      if (error) throw error;\n\n      // Hent admin-status for alle brukere\n      const {\n        data: roles\n      } = await supabase.from('user_roles').select('user_id, is_admin');\n      const {\n        data: userStats\n      } = await supabase.from('user_stats').select('*');\n      const usersWithRoles = users.map(user => {\n        var _roles$find;\n        return {\n          ...user,\n          is_admin: (roles === null || roles === void 0 ? void 0 : (_roles$find = roles.find(role => role.user_id === user.id)) === null || _roles$find === void 0 ? void 0 : _roles$find.is_admin) || false,\n          stats: userStats === null || userStats === void 0 ? void 0 : userStats.find(stat => stat.user_id === user.id)\n        };\n      });\n      setUsers(usersWithRoles);\n\n      // Oppdater statistikk\n      setStats({\n        totalUsers: users.length,\n        activeUsers: users.filter(u => u.last_sign_in_at).length,\n        admins: (roles === null || roles === void 0 ? void 0 : roles.filter(r => r.is_admin).length) || 0\n      });\n    } catch (error) {\n      setError('Kunne ikke hente brukerliste: ' + error.message);\n    }\n  };\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const handleCreateUser = async e => {\n    e.preventDefault();\n    setMessage(null);\n    setError(null);\n    try {\n      const {\n        data,\n        error\n      } = await supabase.auth.admin.createUser({\n        email: newUserEmail,\n        password: newUserPassword,\n        email_confirm: true\n      });\n      if (error) throw error;\n      setMessage('Bruker opprettet!');\n      setNewUserEmail('');\n      setNewUserPassword('');\n      fetchUsers(); // Oppdater brukerlisten\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAdminStatus = async (userId, currentStatus) => {\n    try {\n      const {\n        error\n      } = await supabase.from('user_roles').upsert({\n        user_id: userId,\n        is_admin: !currentStatus\n      });\n      if (error) throw error;\n      fetchUsers(); // Oppdater brukerlisten\n      setMessage(`Admin-status oppdatert`);\n    } catch (error) {\n      setError('Kunne ikke oppdatere admin-status: ' + error.message);\n    }\n  };\n  const CostStatistics = () => {\n    _s();\n    const [costData, setCostData] = useState({\n      totalCost: 0,\n      lastDayCost: 0,\n      lastWeekCost: 0,\n      lastMonthCost: 0,\n      costByModel: {},\n      costByEndpoint: {},\n      recentTransactions: []\n    });\n    useEffect(() => {\n      const fetchCostData = async () => {\n        try {\n          var _totalData$, _dayData$;\n          // Hent total kostnad\n          const {\n            data: totalData\n          } = await supabase.from('api_costs').select('cost_usd').select('SUM(cost_usd)');\n\n          // Hent siste dÃ¸gns kostnad\n          const {\n            data: dayData\n          } = await supabase.from('api_costs').select('cost_usd').gte('timestamp', new Date(Date.now() - 86400000).toISOString()).select('SUM(cost_usd)');\n\n          // Hent kostnader per modell\n          const {\n            data: modelData\n          } = await supabase.from('api_costs').select('model, SUM(cost_usd)').group('model');\n\n          // Hent siste transaksjoner\n          const {\n            data: recentData\n          } = await supabase.from('api_costs').select('*').order('timestamp', {\n            ascending: false\n          }).limit(10);\n          setCostData({\n            totalCost: (totalData === null || totalData === void 0 ? void 0 : (_totalData$ = totalData[0]) === null || _totalData$ === void 0 ? void 0 : _totalData$.sum) || 0,\n            lastDayCost: (dayData === null || dayData === void 0 ? void 0 : (_dayData$ = dayData[0]) === null || _dayData$ === void 0 ? void 0 : _dayData$.sum) || 0,\n            costByModel: modelData === null || modelData === void 0 ? void 0 : modelData.reduce((acc, curr) => ({\n              ...acc,\n              [curr.model]: curr.sum\n            }), {}),\n            recentTransactions: recentData || []\n          });\n        } catch (error) {\n          console.error('Error fetching cost data:', error);\n        }\n      };\n      fetchCostData();\n      const interval = setInterval(fetchCostData, 300000); // Oppdater hvert 5. minutt\n      return () => clearInterval(interval);\n    }, []);\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"API Kostnadsstatistikk\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'grid',\n          gap: 3,\n          gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))',\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              gutterBottom: true,\n              children: \"Total kostnad\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              children: [\"$\", costData.totalCost.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              gutterBottom: true,\n              children: \"Siste 24 timer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              children: [\"$\", costData.lastDayCost.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        sx: {\n          mb: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Tidspunkt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Endpoint\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Modell\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Tokens\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Kostnad\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: costData.recentTransactions.map(transaction => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: new Date(transaction.timestamp).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: transaction.endpoint\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: transaction.model\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: transaction.tokens_used\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [\"$\", transaction.cost_usd.toFixed(4)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 37\n              }, this)]\n            }, transaction.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this);\n  };\n  _s(CostStatistics, \"loQvkkMkq0iVy+GvUtsYGr9FHk4=\");\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      maxWidth: 800,\n      mx: 'auto',\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Tabs, {\n      value: activeTab,\n      onChange: (e, newValue) => setActiveTab(newValue),\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Opprett Bruker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"H\\xE5ndter Brukere\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Statistikk\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"API Kostnader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      sx: {\n        mt: 2,\n        mb: 2\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mt: 2,\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 23\n    }, this), activeTab === 0 && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Opprett ny bruker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCreateUser,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"E-post\",\n          value: newUserEmail,\n          onChange: e => setNewUserEmail(e.target.value),\n          margin: \"normal\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Passord\",\n          value: newUserPassword,\n          onChange: e => setNewUserPassword(e.target.value),\n          margin: \"normal\",\n          required: true,\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          type: \"submit\",\n          variant: \"contained\",\n          sx: {\n            mt: 2\n          },\n          children: \"Opprett bruker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }, this), activeTab === 1 && /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"E-post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Sist innlogget\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: users.map(user => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: user.last_sign_in_at ? new Date(user.last_sign_in_at).toLocaleString('nb-NO') : 'Aldri'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Switch, {\n                checked: user.is_admin,\n                onChange: () => toggleAdminStatus(user.id, user.is_admin)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 37\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 17\n    }, this), activeTab === 2 && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Brukerstatistikk\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                gutterBottom: true,\n                children: \"Totalt antall brukere\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: stats.totalUsers\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                gutterBottom: true,\n                children: \"Aktive brukere\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: stats.activeUsers\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                gutterBottom: true,\n                children: \"Administratorer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: stats.admins\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 17\n    }, this), activeTab === 3 && /*#__PURE__*/_jsxDEV(CostStatistics, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 9\n  }, this);\n};\n_s2(AdminTools, \"A50fMuLmoqMtaXFqQABDqoQ79pM=\");\n_c = AdminTools;\nexport default AdminTools;\nvar _c;\n$RefreshReg$(_c, \"AdminTools\");","map":{"version":3,"names":["React","useState","useEffect","Box","TextField","Button","Typography","Alert","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Switch","Tabs","Tab","Grid","Card","CardContent","supabase","jsxDEV","_jsxDEV","AdminTools","_s2","_s","$RefreshSig$","newUserEmail","setNewUserEmail","newUserPassword","setNewUserPassword","message","setMessage","error","setError","users","setUsers","activeTab","setActiveTab","stats","setStats","totalUsers","activeUsers","admins","dailySearches","averageResponseTime","popularCourses","apiUsage","daily","monthly","fetchUsers","data","auth","admin","listUsers","roles","from","select","userStats","usersWithRoles","map","user","_roles$find","is_admin","find","role","user_id","id","stat","length","filter","u","last_sign_in_at","r","handleCreateUser","e","preventDefault","createUser","email","password","email_confirm","toggleAdminStatus","userId","currentStatus","upsert","CostStatistics","costData","setCostData","totalCost","lastDayCost","lastWeekCost","lastMonthCost","costByModel","costByEndpoint","recentTransactions","fetchCostData","_totalData$","_dayData$","totalData","dayData","gte","Date","now","toISOString","modelData","group","recentData","order","ascending","limit","sum","reduce","acc","curr","model","console","interval","setInterval","clearInterval","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","sx","display","gap","gridTemplateColumns","mb","color","toFixed","component","align","transaction","timestamp","toLocaleString","endpoint","tokens_used","cost_usd","width","maxWidth","mx","p","value","onChange","newValue","label","severity","mt","onSubmit","fullWidth","target","margin","required","type","checked","container","spacing","item","xs","sm","_c","$RefreshReg$"],"sources":["C:/Users/A1510207/OneDrive - BI Norwegian Business School (BIEDU)/Documents/Dev prosjekter/SWAAKON-React/src/components/AdminTools.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n    Box, \r\n    TextField, \r\n    Button, \r\n    Typography, \r\n    Alert,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Paper,\r\n    Switch,\r\n    Tabs,\r\n    Tab,\r\n    Grid,\r\n    Card,\r\n    CardContent\r\n} from '@mui/material';\r\nimport { supabase } from '../services/supabase';\r\n\r\nconst AdminTools = () => {\r\n    const [newUserEmail, setNewUserEmail] = useState('');\r\n    const [newUserPassword, setNewUserPassword] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [users, setUsers] = useState([]);\r\n    const [activeTab, setActiveTab] = useState(0);\r\n    const [stats, setStats] = useState({\r\n        totalUsers: 0,\r\n        activeUsers: 0,\r\n        admins: 0,\r\n        dailySearches: 0,\r\n        averageResponseTime: 0,\r\n        popularCourses: [],\r\n        apiUsage: {\r\n            daily: 0,\r\n            monthly: 0\r\n        }\r\n    });\r\n\r\n    // Hent alle brukere\r\n    const fetchUsers = async () => {\r\n        try {\r\n            const { data: { users }, error } = await supabase.auth.admin.listUsers();\r\n            if (error) throw error;\r\n\r\n            // Hent admin-status for alle brukere\r\n            const { data: roles } = await supabase\r\n                .from('user_roles')\r\n                .select('user_id, is_admin');\r\n\r\n            const { data: userStats } = await supabase\r\n                .from('user_stats')\r\n                .select('*');\r\n\r\n            const usersWithRoles = users.map(user => ({\r\n                ...user,\r\n                is_admin: roles?.find(role => role.user_id === user.id)?.is_admin || false,\r\n                stats: userStats?.find(stat => stat.user_id === user.id)\r\n            }));\r\n\r\n            setUsers(usersWithRoles);\r\n            \r\n            // Oppdater statistikk\r\n            setStats({\r\n                totalUsers: users.length,\r\n                activeUsers: users.filter(u => u.last_sign_in_at).length,\r\n                admins: roles?.filter(r => r.is_admin).length || 0\r\n            });\r\n        } catch (error) {\r\n            setError('Kunne ikke hente brukerliste: ' + error.message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    const handleCreateUser = async (e) => {\r\n        e.preventDefault();\r\n        setMessage(null);\r\n        setError(null);\r\n\r\n        try {\r\n            const { data, error } = await supabase.auth.admin.createUser({\r\n                email: newUserEmail,\r\n                password: newUserPassword,\r\n                email_confirm: true\r\n            });\r\n\r\n            if (error) throw error;\r\n            \r\n            setMessage('Bruker opprettet!');\r\n            setNewUserEmail('');\r\n            setNewUserPassword('');\r\n            fetchUsers(); // Oppdater brukerlisten\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAdminStatus = async (userId, currentStatus) => {\r\n        try {\r\n            const { error } = await supabase\r\n                .from('user_roles')\r\n                .upsert({ \r\n                    user_id: userId, \r\n                    is_admin: !currentStatus \r\n                });\r\n\r\n            if (error) throw error;\r\n            fetchUsers(); // Oppdater brukerlisten\r\n            setMessage(`Admin-status oppdatert`);\r\n        } catch (error) {\r\n            setError('Kunne ikke oppdatere admin-status: ' + error.message);\r\n        }\r\n    };\r\n\r\n    const CostStatistics = () => {\r\n        const [costData, setCostData] = useState({\r\n            totalCost: 0,\r\n            lastDayCost: 0,\r\n            lastWeekCost: 0,\r\n            lastMonthCost: 0,\r\n            costByModel: {},\r\n            costByEndpoint: {},\r\n            recentTransactions: []\r\n        });\r\n\r\n        useEffect(() => {\r\n            const fetchCostData = async () => {\r\n                try {\r\n                    // Hent total kostnad\r\n                    const { data: totalData } = await supabase\r\n                        .from('api_costs')\r\n                        .select('cost_usd')\r\n                        .select('SUM(cost_usd)');\r\n\r\n                    // Hent siste dÃ¸gns kostnad\r\n                    const { data: dayData } = await supabase\r\n                        .from('api_costs')\r\n                        .select('cost_usd')\r\n                        .gte('timestamp', new Date(Date.now() - 86400000).toISOString())\r\n                        .select('SUM(cost_usd)');\r\n\r\n                    // Hent kostnader per modell\r\n                    const { data: modelData } = await supabase\r\n                        .from('api_costs')\r\n                        .select('model, SUM(cost_usd)')\r\n                        .group('model');\r\n\r\n                    // Hent siste transaksjoner\r\n                    const { data: recentData } = await supabase\r\n                        .from('api_costs')\r\n                        .select('*')\r\n                        .order('timestamp', { ascending: false })\r\n                        .limit(10);\r\n\r\n                    setCostData({\r\n                        totalCost: totalData?.[0]?.sum || 0,\r\n                        lastDayCost: dayData?.[0]?.sum || 0,\r\n                        costByModel: modelData?.reduce((acc, curr) => ({\r\n                            ...acc,\r\n                            [curr.model]: curr.sum\r\n                        }), {}),\r\n                        recentTransactions: recentData || []\r\n                    });\r\n                } catch (error) {\r\n                    console.error('Error fetching cost data:', error);\r\n                }\r\n            };\r\n\r\n            fetchCostData();\r\n            const interval = setInterval(fetchCostData, 300000); // Oppdater hvert 5. minutt\r\n            return () => clearInterval(interval);\r\n        }, []);\r\n\r\n        return (\r\n            <Box>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    API Kostnadsstatistikk\r\n                </Typography>\r\n\r\n                <Box sx={{ display: 'grid', gap: 3, gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))', mb: 4 }}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography color=\"textSecondary\" gutterBottom>\r\n                                Total kostnad\r\n                            </Typography>\r\n                            <Typography variant=\"h4\">\r\n                                ${costData.totalCost.toFixed(2)}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography color=\"textSecondary\" gutterBottom>\r\n                                Siste 24 timer\r\n                            </Typography>\r\n                            <Typography variant=\"h4\">\r\n                                ${costData.lastDayCost.toFixed(2)}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Box>\r\n\r\n                <TableContainer component={Paper} sx={{ mb: 4 }}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Tidspunkt</TableCell>\r\n                                <TableCell>Endpoint</TableCell>\r\n                                <TableCell>Modell</TableCell>\r\n                                <TableCell>Tokens</TableCell>\r\n                                <TableCell align=\"right\">Kostnad</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {costData.recentTransactions.map((transaction) => (\r\n                                <TableRow key={transaction.id}>\r\n                                    <TableCell>{new Date(transaction.timestamp).toLocaleString()}</TableCell>\r\n                                    <TableCell>{transaction.endpoint}</TableCell>\r\n                                    <TableCell>{transaction.model}</TableCell>\r\n                                    <TableCell>{transaction.tokens_used}</TableCell>\r\n                                    <TableCell align=\"right\">${transaction.cost_usd.toFixed(4)}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Box>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ width: '100%', maxWidth: 800, mx: 'auto', p: 3 }}>\r\n            <Tabs value={activeTab} onChange={(e, newValue) => setActiveTab(newValue)}>\r\n                <Tab label=\"Opprett Bruker\" />\r\n                <Tab label=\"HÃ¥ndter Brukere\" />\r\n                <Tab label=\"Statistikk\" />\r\n                <Tab label=\"API Kostnader\" />\r\n            </Tabs>\r\n\r\n            {message && <Alert severity=\"success\" sx={{ mt: 2, mb: 2 }}>{message}</Alert>}\r\n            {error && <Alert severity=\"error\" sx={{ mt: 2, mb: 2 }}>{error}</Alert>}\r\n\r\n            {activeTab === 0 && (\r\n                <Box sx={{ mt: 3 }}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        Opprett ny bruker\r\n                    </Typography>\r\n                    \r\n                    <form onSubmit={handleCreateUser}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"E-post\"\r\n                            value={newUserEmail}\r\n                            onChange={(e) => setNewUserEmail(e.target.value)}\r\n                            margin=\"normal\"\r\n                            required\r\n                        />\r\n                        \r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Passord\"\r\n                            value={newUserPassword}\r\n                            onChange={(e) => setNewUserPassword(e.target.value)}\r\n                            margin=\"normal\"\r\n                            required\r\n                            type=\"password\"\r\n                        />\r\n                        \r\n                        <Button\r\n                            fullWidth\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            sx={{ mt: 2 }}\r\n                        >\r\n                            Opprett bruker\r\n                        </Button>\r\n                    </form>\r\n                </Box>\r\n            )}\r\n\r\n            {activeTab === 1 && (\r\n                <TableContainer component={Paper} sx={{ mt: 3 }}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>E-post</TableCell>\r\n                                <TableCell>Sist innlogget</TableCell>\r\n                                <TableCell>Admin</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {users.map((user) => (\r\n                                <TableRow key={user.id}>\r\n                                    <TableCell>{user.email}</TableCell>\r\n                                    <TableCell>\r\n                                        {user.last_sign_in_at \r\n                                            ? new Date(user.last_sign_in_at).toLocaleString('nb-NO')\r\n                                            : 'Aldri'}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Switch\r\n                                            checked={user.is_admin}\r\n                                            onChange={() => toggleAdminStatus(user.id, user.is_admin)}\r\n                                        />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            )}\r\n\r\n            {activeTab === 2 && (\r\n                <Box sx={{ mt: 3 }}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        Brukerstatistikk\r\n                    </Typography>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Card>\r\n                                <CardContent>\r\n                                    <Typography color=\"textSecondary\" gutterBottom>\r\n                                        Totalt antall brukere\r\n                                    </Typography>\r\n                                    <Typography variant=\"h4\">\r\n                                        {stats.totalUsers}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Card>\r\n                                <CardContent>\r\n                                    <Typography color=\"textSecondary\" gutterBottom>\r\n                                        Aktive brukere\r\n                                    </Typography>\r\n                                    <Typography variant=\"h4\">\r\n                                        {stats.activeUsers}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Card>\r\n                                <CardContent>\r\n                                    <Typography color=\"textSecondary\" gutterBottom>\r\n                                        Administratorer\r\n                                    </Typography>\r\n                                    <Typography variant=\"h4\">\r\n                                        {stats.admins}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            )}\r\n\r\n            {activeTab === 3 && <CostStatistics />}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default AdminTools; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}