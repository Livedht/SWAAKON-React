{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A1510207\\\\OneDrive - BI Norwegian Business School (BIEDU)\\\\Documents\\\\Dev prosjekter\\\\SWAAKON-React\\\\src\\\\components\\\\AdminTools.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, TextField, Button, Typography, Alert, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Switch, Tabs, Tab, Grid, Card, CardContent, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\nimport { supabase } from '../services/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminTools = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [newUserEmail, setNewUserEmail] = useState('');\n  const [newUserPassword, setNewUserPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const [error, setError] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [activeTab, setActiveTab] = useState(0);\n  const [stats, setStats] = useState({\n    totalUsers: 0,\n    activeUsers: 0,\n    admins: 0,\n    dailySearches: 0,\n    averageResponseTime: 0,\n    popularCourses: [],\n    apiUsage: {\n      daily: 0,\n      monthly: 0\n    }\n  });\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [newPassword, setNewPassword] = useState('');\n  const [showPasswordDialog, setShowPasswordDialog] = useState(false);\n\n  // Hent alle brukere\n  const fetchUsers = async () => {\n    try {\n      const {\n        data: {\n          users\n        },\n        error\n      } = await supabase.auth.admin.listUsers();\n      if (error) throw error;\n\n      // Hent admin-status for alle brukere\n      const {\n        data: roles\n      } = await supabase.from('user_roles').select('user_id, is_admin');\n      const {\n        data: userStats\n      } = await supabase.from('user_stats').select('*');\n      const usersWithRoles = users.map(user => {\n        var _roles$find;\n        return {\n          ...user,\n          is_admin: (roles === null || roles === void 0 ? void 0 : (_roles$find = roles.find(role => role.user_id === user.id)) === null || _roles$find === void 0 ? void 0 : _roles$find.is_admin) || false,\n          stats: userStats === null || userStats === void 0 ? void 0 : userStats.find(stat => stat.user_id === user.id)\n        };\n      });\n      setUsers(usersWithRoles);\n\n      // Oppdater statistikk\n      setStats({\n        totalUsers: users.length,\n        activeUsers: users.filter(u => u.last_sign_in_at).length,\n        admins: (roles === null || roles === void 0 ? void 0 : roles.filter(r => r.is_admin).length) || 0\n      });\n    } catch (error) {\n      setError('Kunne ikke hente brukerliste: ' + error.message);\n    }\n  };\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const handleCreateUser = async e => {\n    e.preventDefault();\n    setMessage(null);\n    setError(null);\n    try {\n      const {\n        data,\n        error\n      } = await supabase.auth.admin.createUser({\n        email: newUserEmail,\n        password: newUserPassword,\n        email_confirm: true\n      });\n      if (error) throw error;\n      setMessage('Bruker opprettet!');\n      setNewUserEmail('');\n      setNewUserPassword('');\n      fetchUsers(); // Oppdater brukerlisten\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAdminStatus = async (userId, currentStatus) => {\n    try {\n      const {\n        error\n      } = await supabase.from('user_roles').upsert({\n        user_id: userId,\n        is_admin: !currentStatus\n      });\n      if (error) throw error;\n      fetchUsers(); // Oppdater brukerlisten\n      setMessage(`Admin-status oppdatert`);\n    } catch (error) {\n      setError('Kunne ikke oppdatere admin-status: ' + error.message);\n    }\n  };\n\n  // Funksjon for å endre passord\n  const handlePasswordChange = async () => {\n    try {\n      const {\n        error\n      } = await supabase.auth.admin.updateUserById(selectedUser.id, {\n        password: newPassword\n      });\n      if (error) throw error;\n      setMessage(`Passord endret for ${selectedUser.email}`);\n      setShowPasswordDialog(false);\n      setNewPassword('');\n      setSelectedUser(null);\n    } catch (error) {\n      setError('Kunne ikke endre passord: ' + error.message);\n    }\n  };\n  const CostStatistics = () => {\n    _s();\n    const [costData, setCostData] = useState({\n      totalCost: 0,\n      lastDayCost: 0,\n      lastWeekCost: 0,\n      lastMonthCost: 0,\n      costByModel: {},\n      costByEndpoint: {},\n      recentTransactions: []\n    });\n    const fetchCostData = async () => {\n      try {\n        console.log('Fetching cost data...');\n\n        // Hent total kostnad\n        const {\n          data: totalData,\n          error: totalError\n        } = await supabase.from('api_costs').select('cost_usd');\n        if (totalError) throw totalError;\n        const totalCost = totalData.reduce((sum, item) => sum + parseFloat(item.cost_usd), 0);\n\n        // Hent siste døgns kostnad\n        const yesterday = new Date();\n        yesterday.setDate(yesterday.getDate() - 1);\n        const {\n          data: dayData,\n          error: dayError\n        } = await supabase.from('api_costs').select('cost_usd').gte('timestamp', yesterday.toISOString());\n        if (dayError) throw dayError;\n        const dayCost = dayData.reduce((sum, item) => sum + parseFloat(item.cost_usd), 0);\n\n        // Hent siste transaksjoner\n        const {\n          data: recentData,\n          error: recentError\n        } = await supabase.from('api_costs').select('*').order('timestamp', {\n          ascending: false\n        }).limit(10);\n        if (recentError) throw recentError;\n        console.log('Cost data fetched:', {\n          totalCost,\n          dayCost,\n          recentTransactions: recentData\n        });\n        setCostData({\n          totalCost,\n          lastDayCost: dayCost,\n          recentTransactions: recentData || []\n        });\n      } catch (error) {\n        console.error('Error fetching cost data:', error);\n      }\n    };\n    useEffect(() => {\n      fetchCostData();\n      const interval = setInterval(fetchCostData, 30000); // Oppdater hvert 30. sekund\n      return () => clearInterval(interval);\n    }, []);\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"API Kostnadsstatistikk\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'grid',\n          gap: 3,\n          gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))',\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              gutterBottom: true,\n              children: \"Total kostnad\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              children: [\"$\", costData.totalCost.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              gutterBottom: true,\n              children: \"Siste 24 timer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              children: [\"$\", costData.lastDayCost.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        sx: {\n          mb: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Tidspunkt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Bruker\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Endpoint\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Modell\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Tokens\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Kostnad\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: costData.recentTransactions.map(transaction => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: new Date(transaction.timestamp).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: transaction.user_email || 'Ukjent bruker'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: transaction.endpoint\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: transaction.model\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: transaction.tokens_used\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [\"$\", transaction.cost_usd.toFixed(4)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 37\n              }, this)]\n            }, transaction.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        sx: {\n          mt: 4\n        },\n        children: \"Brukerstatistikk\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Bruker\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Antall sp\\xF8rringer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Total kostnad\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: Object.entries(costData.recentTransactions.reduce((acc, curr) => {\n              const email = curr.user_email || 'Ukjent bruker';\n              if (!acc[email]) {\n                acc[email] = {\n                  queries: 0,\n                  cost: 0\n                };\n              }\n              acc[email].queries++;\n              acc[email].cost += parseFloat(curr.cost_usd);\n              return acc;\n            }, {})).map(([email, stats]) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: stats.queries\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [\"$\", stats.cost.toFixed(4)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 37\n              }, this)]\n            }, email, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this);\n  };\n  _s(CostStatistics, \"loQvkkMkq0iVy+GvUtsYGr9FHk4=\");\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      maxWidth: 800,\n      mx: 'auto',\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Tabs, {\n      value: activeTab,\n      onChange: (e, newValue) => setActiveTab(newValue),\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Opprett Bruker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"H\\xE5ndter Brukere\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Statistikk\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"API Kostnader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      sx: {\n        mt: 2,\n        mb: 2\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mt: 2,\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 23\n    }, this), activeTab === 0 && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Opprett ny bruker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCreateUser,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"E-post\",\n          value: newUserEmail,\n          onChange: e => setNewUserEmail(e.target.value),\n          margin: \"normal\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Passord\",\n          value: newUserPassword,\n          onChange: e => setNewUserPassword(e.target.value),\n          margin: \"normal\",\n          required: true,\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          type: \"submit\",\n          variant: \"contained\",\n          sx: {\n            mt: 2\n          },\n          children: \"Opprett bruker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 17\n    }, this), activeTab === 1 && /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"E-post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Sist innlogget\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Handlinger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: users.map(user => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: user.last_sign_in_at ? new Date(user.last_sign_in_at).toLocaleString('nb-NO') : 'Aldri'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Switch, {\n                checked: user.is_admin,\n                onChange: () => toggleAdminStatus(user.id, user.is_admin)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                onClick: () => {\n                  setSelectedUser(user);\n                  setShowPasswordDialog(true);\n                },\n                children: \"Endre passord\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 37\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 17\n    }, this), activeTab === 2 && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Brukerstatistikk\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                gutterBottom: true,\n                children: \"Totalt antall brukere\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: stats.totalUsers\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                gutterBottom: true,\n                children: \"Aktive brukere\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: stats.activeUsers\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                gutterBottom: true,\n                children: \"Administratorer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: stats.admins\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 17\n    }, this), activeTab === 3 && /*#__PURE__*/_jsxDEV(CostStatistics, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showPasswordDialog,\n      onClose: () => setShowPasswordDialog(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: [\"Endre passord for \", selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Nytt passord\",\n          type: \"password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          margin: \"normal\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setShowPasswordDialog(false),\n          children: \"Avbryt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handlePasswordChange,\n          variant: \"contained\",\n          disabled: !newPassword,\n          children: \"Lagre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 322,\n    columnNumber: 9\n  }, this);\n};\n_s2(AdminTools, \"P0K8j+JG7f9E32ilrYaPO/sWjpI=\");\n_c = AdminTools;\nexport default AdminTools;\nvar _c;\n$RefreshReg$(_c, \"AdminTools\");","map":{"version":3,"names":["React","useState","useEffect","Box","TextField","Button","Typography","Alert","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Switch","Tabs","Tab","Grid","Card","CardContent","Dialog","DialogTitle","DialogContent","DialogActions","supabase","jsxDEV","_jsxDEV","AdminTools","_s2","_s","$RefreshSig$","newUserEmail","setNewUserEmail","newUserPassword","setNewUserPassword","message","setMessage","error","setError","users","setUsers","activeTab","setActiveTab","stats","setStats","totalUsers","activeUsers","admins","dailySearches","averageResponseTime","popularCourses","apiUsage","daily","monthly","selectedUser","setSelectedUser","newPassword","setNewPassword","showPasswordDialog","setShowPasswordDialog","fetchUsers","data","auth","admin","listUsers","roles","from","select","userStats","usersWithRoles","map","user","_roles$find","is_admin","find","role","user_id","id","stat","length","filter","u","last_sign_in_at","r","handleCreateUser","e","preventDefault","createUser","email","password","email_confirm","toggleAdminStatus","userId","currentStatus","upsert","handlePasswordChange","updateUserById","CostStatistics","costData","setCostData","totalCost","lastDayCost","lastWeekCost","lastMonthCost","costByModel","costByEndpoint","recentTransactions","fetchCostData","console","log","totalData","totalError","reduce","sum","item","parseFloat","cost_usd","yesterday","Date","setDate","getDate","dayData","dayError","gte","toISOString","dayCost","recentData","recentError","order","ascending","limit","interval","setInterval","clearInterval","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","sx","display","gap","gridTemplateColumns","mb","color","toFixed","component","align","transaction","timestamp","toLocaleString","user_email","endpoint","model","tokens_used","mt","Object","entries","acc","curr","queries","cost","width","maxWidth","mx","p","value","onChange","newValue","label","severity","onSubmit","fullWidth","target","margin","required","type","checked","size","onClick","container","spacing","xs","sm","open","onClose","disabled","_c","$RefreshReg$"],"sources":["C:/Users/A1510207/OneDrive - BI Norwegian Business School (BIEDU)/Documents/Dev prosjekter/SWAAKON-React/src/components/AdminTools.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n    Box, \r\n    TextField, \r\n    Button, \r\n    Typography, \r\n    Alert,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Paper,\r\n    Switch,\r\n    Tabs,\r\n    Tab,\r\n    Grid,\r\n    Card,\r\n    CardContent,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions\r\n} from '@mui/material';\r\nimport { supabase } from '../services/supabase';\r\n\r\nconst AdminTools = () => {\r\n    const [newUserEmail, setNewUserEmail] = useState('');\r\n    const [newUserPassword, setNewUserPassword] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [users, setUsers] = useState([]);\r\n    const [activeTab, setActiveTab] = useState(0);\r\n    const [stats, setStats] = useState({\r\n        totalUsers: 0,\r\n        activeUsers: 0,\r\n        admins: 0,\r\n        dailySearches: 0,\r\n        averageResponseTime: 0,\r\n        popularCourses: [],\r\n        apiUsage: {\r\n            daily: 0,\r\n            monthly: 0\r\n        }\r\n    });\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [showPasswordDialog, setShowPasswordDialog] = useState(false);\r\n\r\n    // Hent alle brukere\r\n    const fetchUsers = async () => {\r\n        try {\r\n            const { data: { users }, error } = await supabase.auth.admin.listUsers();\r\n            if (error) throw error;\r\n\r\n            // Hent admin-status for alle brukere\r\n            const { data: roles } = await supabase\r\n                .from('user_roles')\r\n                .select('user_id, is_admin');\r\n\r\n            const { data: userStats } = await supabase\r\n                .from('user_stats')\r\n                .select('*');\r\n\r\n            const usersWithRoles = users.map(user => ({\r\n                ...user,\r\n                is_admin: roles?.find(role => role.user_id === user.id)?.is_admin || false,\r\n                stats: userStats?.find(stat => stat.user_id === user.id)\r\n            }));\r\n\r\n            setUsers(usersWithRoles);\r\n            \r\n            // Oppdater statistikk\r\n            setStats({\r\n                totalUsers: users.length,\r\n                activeUsers: users.filter(u => u.last_sign_in_at).length,\r\n                admins: roles?.filter(r => r.is_admin).length || 0\r\n            });\r\n        } catch (error) {\r\n            setError('Kunne ikke hente brukerliste: ' + error.message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    const handleCreateUser = async (e) => {\r\n        e.preventDefault();\r\n        setMessage(null);\r\n        setError(null);\r\n\r\n        try {\r\n            const { data, error } = await supabase.auth.admin.createUser({\r\n                email: newUserEmail,\r\n                password: newUserPassword,\r\n                email_confirm: true\r\n            });\r\n\r\n            if (error) throw error;\r\n            \r\n            setMessage('Bruker opprettet!');\r\n            setNewUserEmail('');\r\n            setNewUserPassword('');\r\n            fetchUsers(); // Oppdater brukerlisten\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAdminStatus = async (userId, currentStatus) => {\r\n        try {\r\n            const { error } = await supabase\r\n                .from('user_roles')\r\n                .upsert({ \r\n                    user_id: userId, \r\n                    is_admin: !currentStatus \r\n                });\r\n\r\n            if (error) throw error;\r\n            fetchUsers(); // Oppdater brukerlisten\r\n            setMessage(`Admin-status oppdatert`);\r\n        } catch (error) {\r\n            setError('Kunne ikke oppdatere admin-status: ' + error.message);\r\n        }\r\n    };\r\n\r\n    // Funksjon for å endre passord\r\n    const handlePasswordChange = async () => {\r\n        try {\r\n            const { error } = await supabase.auth.admin.updateUserById(\r\n                selectedUser.id,\r\n                { password: newPassword }\r\n            );\r\n\r\n            if (error) throw error;\r\n\r\n            setMessage(`Passord endret for ${selectedUser.email}`);\r\n            setShowPasswordDialog(false);\r\n            setNewPassword('');\r\n            setSelectedUser(null);\r\n        } catch (error) {\r\n            setError('Kunne ikke endre passord: ' + error.message);\r\n        }\r\n    };\r\n\r\n    const CostStatistics = () => {\r\n        const [costData, setCostData] = useState({\r\n            totalCost: 0,\r\n            lastDayCost: 0,\r\n            lastWeekCost: 0,\r\n            lastMonthCost: 0,\r\n            costByModel: {},\r\n            costByEndpoint: {},\r\n            recentTransactions: []\r\n        });\r\n\r\n        const fetchCostData = async () => {\r\n            try {\r\n                console.log('Fetching cost data...');\r\n                \r\n                // Hent total kostnad\r\n                const { data: totalData, error: totalError } = await supabase\r\n                    .from('api_costs')\r\n                    .select('cost_usd');\r\n\r\n                if (totalError) throw totalError;\r\n                \r\n                const totalCost = totalData.reduce((sum, item) => sum + parseFloat(item.cost_usd), 0);\r\n\r\n                // Hent siste døgns kostnad\r\n                const yesterday = new Date();\r\n                yesterday.setDate(yesterday.getDate() - 1);\r\n                \r\n                const { data: dayData, error: dayError } = await supabase\r\n                    .from('api_costs')\r\n                    .select('cost_usd')\r\n                    .gte('timestamp', yesterday.toISOString());\r\n\r\n                if (dayError) throw dayError;\r\n                \r\n                const dayCost = dayData.reduce((sum, item) => sum + parseFloat(item.cost_usd), 0);\r\n\r\n                // Hent siste transaksjoner\r\n                const { data: recentData, error: recentError } = await supabase\r\n                    .from('api_costs')\r\n                    .select('*')\r\n                    .order('timestamp', { ascending: false })\r\n                    .limit(10);\r\n\r\n                if (recentError) throw recentError;\r\n\r\n                console.log('Cost data fetched:', {\r\n                    totalCost,\r\n                    dayCost,\r\n                    recentTransactions: recentData\r\n                });\r\n\r\n                setCostData({\r\n                    totalCost,\r\n                    lastDayCost: dayCost,\r\n                    recentTransactions: recentData || []\r\n                });\r\n            } catch (error) {\r\n                console.error('Error fetching cost data:', error);\r\n            }\r\n        };\r\n\r\n        useEffect(() => {\r\n            fetchCostData();\r\n            const interval = setInterval(fetchCostData, 30000); // Oppdater hvert 30. sekund\r\n            return () => clearInterval(interval);\r\n        }, []);\r\n\r\n        return (\r\n            <Box>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    API Kostnadsstatistikk\r\n                </Typography>\r\n\r\n                <Box sx={{ display: 'grid', gap: 3, gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))', mb: 4 }}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography color=\"textSecondary\" gutterBottom>\r\n                                Total kostnad\r\n                            </Typography>\r\n                            <Typography variant=\"h4\">\r\n                                ${costData.totalCost.toFixed(2)}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography color=\"textSecondary\" gutterBottom>\r\n                                Siste 24 timer\r\n                            </Typography>\r\n                            <Typography variant=\"h4\">\r\n                                ${costData.lastDayCost.toFixed(2)}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Box>\r\n\r\n                <TableContainer component={Paper} sx={{ mb: 4 }}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Tidspunkt</TableCell>\r\n                                <TableCell>Bruker</TableCell>\r\n                                <TableCell>Endpoint</TableCell>\r\n                                <TableCell>Modell</TableCell>\r\n                                <TableCell>Tokens</TableCell>\r\n                                <TableCell align=\"right\">Kostnad</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {costData.recentTransactions.map((transaction) => (\r\n                                <TableRow key={transaction.id}>\r\n                                    <TableCell>\r\n                                        {new Date(transaction.timestamp).toLocaleString()}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {transaction.user_email || 'Ukjent bruker'}\r\n                                    </TableCell>\r\n                                    <TableCell>{transaction.endpoint}</TableCell>\r\n                                    <TableCell>{transaction.model}</TableCell>\r\n                                    <TableCell>{transaction.tokens_used}</TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        ${transaction.cost_usd.toFixed(4)}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\r\n                <Typography variant=\"h6\" gutterBottom sx={{ mt: 4 }}>\r\n                    Brukerstatistikk\r\n                </Typography>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Bruker</TableCell>\r\n                                <TableCell>Antall spørringer</TableCell>\r\n                                <TableCell align=\"right\">Total kostnad</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {Object.entries(\r\n                                costData.recentTransactions.reduce((acc, curr) => {\r\n                                    const email = curr.user_email || 'Ukjent bruker';\r\n                                    if (!acc[email]) {\r\n                                        acc[email] = {\r\n                                            queries: 0,\r\n                                            cost: 0\r\n                                        };\r\n                                    }\r\n                                    acc[email].queries++;\r\n                                    acc[email].cost += parseFloat(curr.cost_usd);\r\n                                    return acc;\r\n                                }, {})\r\n                            ).map(([email, stats]) => (\r\n                                <TableRow key={email}>\r\n                                    <TableCell>{email}</TableCell>\r\n                                    <TableCell>{stats.queries}</TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        ${stats.cost.toFixed(4)}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Box>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ width: '100%', maxWidth: 800, mx: 'auto', p: 3 }}>\r\n            <Tabs value={activeTab} onChange={(e, newValue) => setActiveTab(newValue)}>\r\n                <Tab label=\"Opprett Bruker\" />\r\n                <Tab label=\"Håndter Brukere\" />\r\n                <Tab label=\"Statistikk\" />\r\n                <Tab label=\"API Kostnader\" />\r\n            </Tabs>\r\n\r\n            {message && <Alert severity=\"success\" sx={{ mt: 2, mb: 2 }}>{message}</Alert>}\r\n            {error && <Alert severity=\"error\" sx={{ mt: 2, mb: 2 }}>{error}</Alert>}\r\n\r\n            {activeTab === 0 && (\r\n                <Box sx={{ mt: 3 }}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        Opprett ny bruker\r\n                    </Typography>\r\n                    \r\n                    <form onSubmit={handleCreateUser}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"E-post\"\r\n                            value={newUserEmail}\r\n                            onChange={(e) => setNewUserEmail(e.target.value)}\r\n                            margin=\"normal\"\r\n                            required\r\n                        />\r\n                        \r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Passord\"\r\n                            value={newUserPassword}\r\n                            onChange={(e) => setNewUserPassword(e.target.value)}\r\n                            margin=\"normal\"\r\n                            required\r\n                            type=\"password\"\r\n                        />\r\n                        \r\n                        <Button\r\n                            fullWidth\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            sx={{ mt: 2 }}\r\n                        >\r\n                            Opprett bruker\r\n                        </Button>\r\n                    </form>\r\n                </Box>\r\n            )}\r\n\r\n            {activeTab === 1 && (\r\n                <TableContainer component={Paper} sx={{ mt: 3 }}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>E-post</TableCell>\r\n                                <TableCell>Sist innlogget</TableCell>\r\n                                <TableCell>Admin</TableCell>\r\n                                <TableCell>Handlinger</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {users.map((user) => (\r\n                                <TableRow key={user.id}>\r\n                                    <TableCell>{user.email}</TableCell>\r\n                                    <TableCell>\r\n                                        {user.last_sign_in_at \r\n                                            ? new Date(user.last_sign_in_at).toLocaleString('nb-NO')\r\n                                            : 'Aldri'}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Switch\r\n                                            checked={user.is_admin}\r\n                                            onChange={() => toggleAdminStatus(user.id, user.is_admin)}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Button\r\n                                            size=\"small\"\r\n                                            onClick={() => {\r\n                                                setSelectedUser(user);\r\n                                                setShowPasswordDialog(true);\r\n                                            }}\r\n                                        >\r\n                                            Endre passord\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            )}\r\n\r\n            {activeTab === 2 && (\r\n                <Box sx={{ mt: 3 }}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        Brukerstatistikk\r\n                    </Typography>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Card>\r\n                                <CardContent>\r\n                                    <Typography color=\"textSecondary\" gutterBottom>\r\n                                        Totalt antall brukere\r\n                                    </Typography>\r\n                                    <Typography variant=\"h4\">\r\n                                        {stats.totalUsers}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Card>\r\n                                <CardContent>\r\n                                    <Typography color=\"textSecondary\" gutterBottom>\r\n                                        Aktive brukere\r\n                                    </Typography>\r\n                                    <Typography variant=\"h4\">\r\n                                        {stats.activeUsers}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Card>\r\n                                <CardContent>\r\n                                    <Typography color=\"textSecondary\" gutterBottom>\r\n                                        Administratorer\r\n                                    </Typography>\r\n                                    <Typography variant=\"h4\">\r\n                                        {stats.admins}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            )}\r\n\r\n            {activeTab === 3 && <CostStatistics />}\r\n\r\n            {/* Dialog for passordendring */}\r\n            <Dialog \r\n                open={showPasswordDialog} \r\n                onClose={() => setShowPasswordDialog(false)}\r\n            >\r\n                <DialogTitle>\r\n                    Endre passord for {selectedUser?.email}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        fullWidth\r\n                        label=\"Nytt passord\"\r\n                        type=\"password\"\r\n                        value={newPassword}\r\n                        onChange={(e) => setNewPassword(e.target.value)}\r\n                        margin=\"normal\"\r\n                        required\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button \r\n                        onClick={() => setShowPasswordDialog(false)}\r\n                    >\r\n                        Avbryt\r\n                    </Button>\r\n                    <Button \r\n                        onClick={handlePasswordChange}\r\n                        variant=\"contained\"\r\n                        disabled={!newPassword}\r\n                    >\r\n                        Lagre\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default AdminTools; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}